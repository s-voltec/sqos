#ifndef ARCH_SERIAL_H
#define ARCH_SERIAL_H

// I/O ports
#define SERIAL_COM1 0x03f8
#define SERIAL_DATA_REGISTER_OFFSET 0
#define SERIAL_INTERRUPT_ENABLE_OFFSET 1
#define SERIAL_DIVISOR_LOW_OFFSET 0
#define SERIAL_DIVISOR_HIGH_OFFSET 1
#define SERIAL_FIFO_CONTROL_OFFSET 2
#define SERIAL_LINE_CONTROL_REGISTER_OFFSET 3
#define SERIAL_MODEM_CONTROL_REGISTER_OFFSET 4
#define SERIAL_LINE_STATUS_REGISTER_OFFSET 5
#define SERIAL_MODEM_STATUS_REGISTER_OFFSET 6
#define SERIAL_SCRATCH_REGISTER_OFFSET 7

// constants
#define SERIAL_BASE_CLOCK 115200
#define SERIAL_RATE_115200 115200
#define SERIAL_DLBA_MASK 0x80
#define SERIAL_LENGTH_5 0x00
#define SERIAL_LENGTH_6 0x01
#define SERIAL_LENGTH_7 0x02
#define SERIAL_LENGTH_8 0x03
#define SERIAL_STOP_BIT_1 0x00
#define SERIAL_STOP_BIT_2 0x04
#define SERIAL_PARITY_NONE 0x00
#define SERIAL_PARITY_ODD 0x08
#define SERIAL_PARITY_EVEN 0x18
#define SERIAL_PARITY_MARK 0x28
#define SERIAL_PARITY_SPACE 0x38
#define SERIAL_DB_8N1 (SERIAL_LENGTH_8 | SERIAL_PARITY_NONE | SERIAL_STOP_BIT_1)
#define SERIAL_LS_WREADY 0x20

#include <types.h>

int setBaudRate(u16 port, u32 rate);
int setDataBits(u16 port, u8 bits);

#endif
